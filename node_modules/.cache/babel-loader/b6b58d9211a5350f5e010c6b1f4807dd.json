{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\simple form\\\\src\\\\components\\\\login.js\";\nimport React from 'react';\nimport { Grid, Paper, Avatar, TextField, Button, Typography, Link } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst Login = ({\n  handleChange\n}) => {\n  const paperStyle = {\n    padding: 20,\n    height: '73vh',\n    width: 300,\n    margin: \"0 auto\"\n  };\n  const avatarStyle = {\n    backgroundColor: '#1bbd7e'\n  };\n  const btnstyle = {\n    margin: '8px 0'\n  };\n  const initialValues = {\n    username: '',\n    password: '',\n    remember: false\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().email('please enter valid email').required(\"Required\"),\n    password: Yup.string().required(\"Required\")\n  });\n\n  const onSubmit = (values, props) => {\n    console.log(values);\n    setTimeout(() => {\n      //using settimeut to give it a feel of submiting to some api\n      props.resetForm(); //ater submitting form will be back to empty\n\n      props.setSubmitting(false); //this will help i desinging the button .\n    }, 2000);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    style: paperStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    style: avatarStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Sign In\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    as: TextField,\n    label: \"Username\",\n    name: \"username\",\n    placeholder: \"Enter username\",\n    fullWidth: true,\n    required: true,\n    helperText: /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    as: TextField,\n    label: \"Password\",\n    name: \"password\",\n    placeholder: \"Enter password\",\n    type: \"password\",\n    fullWidth: true,\n    required: true,\n    helperText: /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    as: FormControlLabel,\n    name: \"remember\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }\n    }),\n    label: \"Remember me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    disabled: props.isSubmitting //when clicked submit and it is srunnig in settimeout till that time make it diasabled button,\n    ,\n    style: btnstyle,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, props.isSubmitting ? \"Loading\" : \"Sign in\"))), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Forgot password ?\")), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \" Do you have an account ?\", /*#__PURE__*/React.createElement(Link, {\n    href: \"#\",\n    onClick: () => handleChange(\"event\", 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 22\n    }\n  }, \"Sign Up\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Admin/Downloads/simple form/src/components/login.js"],"names":["React","Grid","Paper","Avatar","TextField","Button","Typography","Link","LockOutlinedIcon","FormControlLabel","Checkbox","Formik","Form","Field","ErrorMessage","Yup","Login","handleChange","paperStyle","padding","height","width","margin","avatarStyle","backgroundColor","btnstyle","initialValues","username","password","remember","validationSchema","object","shape","string","email","required","onSubmit","values","props","console","log","setTimeout","resetForm","setSubmitting","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Grid, Paper, Avatar, TextField, Button, Typography, Link } from '@material-ui/core'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport * as Yup from 'yup'\n\nconst Login = ({ handleChange }) => {\n\n    const paperStyle = { padding: 20, height: '73vh', width: 300, margin: \"0 auto\" }\n    const avatarStyle = { backgroundColor: '#1bbd7e' }\n    const btnstyle = { margin: '8px 0' }\n    const initialValues = {\n        username: '',\n        password: '',\n        remember: false\n    }\n    const validationSchema = Yup.object().shape({\n        username: Yup.string().email('please enter valid email').required(\"Required\"),\n        password: Yup.string().required(\"Required\")\n    })\n    const onSubmit = (values, props) => {\n        console.log(values)\n        setTimeout(() => { //using settimeut to give it a feel of submiting to some api\n            props.resetForm() //ater submitting form will be back to empty\n            props.setSubmitting(false) //this will help i desinging the button .\n        }, 2000)\n\n    }\n    return (\n        <Grid>\n            <Paper style={paperStyle}>\n                <Grid align='center'>\n                    <Avatar style={avatarStyle}><LockOutlinedIcon /></Avatar>\n                    <h2>Sign In</h2>\n                </Grid>\n                <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\n                    {(props) => (\n                        <Form>\n                            <Field as={TextField} label='Username' name=\"username\"\n                                placeholder='Enter username' fullWidth required\n                                helperText={<ErrorMessage name=\"username\" />}\n                            />\n                            <Field as={TextField} label='Password' name=\"password\"\n                                placeholder='Enter password' type='password' fullWidth required\n                                helperText={<ErrorMessage name=\"password\" />} />\n                            <Field as={FormControlLabel}\n                                name='remember'\n                                control={\n                                    <Checkbox\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Remember me\"\n                            />\n                            <Button type='submit' color='primary' variant=\"contained\" disabled={props.isSubmitting} //when clicked submit and it is srunnig in settimeout till that time make it diasabled button,\n                                style={btnstyle} fullWidth>{props.isSubmitting ? \"Loading\" : \"Sign in\"}</Button>\n\n                        </Form>\n                    )}\n                </Formik>\n                <Typography >\n                    <Link href=\"#\" >\n                        Forgot password ?\n                </Link>\n                </Typography>\n                <Typography > Do you have an account ?\n                     <Link href=\"#\" onClick={() => handleChange(\"event\", 1)} >\n                        Sign Up\n                </Link>\n                </Typography>\n            </Paper>\n        </Grid>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}